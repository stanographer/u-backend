#!/usr/bin/env node

/* Dependencies */
const cluster = require('cluster');
const numCPUs = require('os').cpus().length;
const startServer = require('./server');

// Normalize a port into a number, string, or false.
function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }
  return false;
}

// Get port from environment and store in Express.
const WS_PORT = normalizePort(process.env.WS_PORT || '9090');
const PORT = normalizePort(process.env.PORT || '1988');

// Using Cluster to create worker processes.
if (cluster.isMaster) {
  console.log(`Master ${ process.pid } is running. ‚úÖ`);

  // Fork workers.
  for (let i = 0; i < numCPUs; i++) {
    cluster.fork();
  }

  cluster.on('exit', (worker, code, signal) => {
    console.error(
      `Worker ${ worker.process.pid } died. ‚ùå
       Code: ${ code }.
       Signal: ${ signal }`
    );

    // Re-spawn after failure.
    cluster.fork();
    console.log('Restarting... ‚úù');
  });
} else {
  // Start server.
  startServer(PORT, WS_PORT);
  console.log(`Worker process, ${ process.pid } online. üë∑`);
}
